package com.application.python3.entities;
// Generated 25 feb 2022, 17:03:20 by Hibernate Tools 5.6.3.Final

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Embeddable;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * GiteId generated by hbm2java
 */

/* Data layer dell'applicativo: classe Hibernate della Primary Key della tabella Gite*/

@Embeddable
public class GiteId implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -4276514197023615014L;
	
	@Column(name = "nome_gita")
	private String nomeGita;
	@Column(name = "data_effettuazione")
	@Temporal(TemporalType.TIMESTAMP)
	private Date dataEffettuazione;
	@Column(name = "caricamento_dati")
	private String caricamentoDati;

	public GiteId() {
	}

	public GiteId(String nomeGita, Date dataEffettuazione, String caricamentoDati) {
		this.nomeGita = nomeGita;
		this.dataEffettuazione = dataEffettuazione;
		this.caricamentoDati = caricamentoDati;
	}

	public String getNomeGita() {
		return this.nomeGita;
	}

	public void setNomeGita(String nomeGita) {
		this.nomeGita = nomeGita;
	}

	public Date getDataEffettuazione() {
		return this.dataEffettuazione;
	}

	public void setDataEffettuazione(Date dataEffettuazione) {
		this.dataEffettuazione = dataEffettuazione;
	}

	public String getCaricamentoDati() {
		return this.caricamentoDati;
	}

	public void setCaricamentoDati(String caricamentoDati) {
		this.caricamentoDati = caricamentoDati;
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof GiteId))
			return false;
		GiteId castOther = (GiteId) other;

		return ((this.getNomeGita() == castOther.getNomeGita()) || (this.getNomeGita() != null
				&& castOther.getNomeGita() != null && this.getNomeGita().equals(castOther.getNomeGita())))
				&& ((this.getDataEffettuazione() == castOther.getDataEffettuazione())
						|| (this.getDataEffettuazione() != null && castOther.getDataEffettuazione() != null
								&& this.getDataEffettuazione().equals(castOther.getDataEffettuazione())))
				&& ((this.getCaricamentoDati() == castOther.getCaricamentoDati())
						|| (this.getCaricamentoDati() != null && castOther.getCaricamentoDati() != null
								&& this.getCaricamentoDati().equals(castOther.getCaricamentoDati())));
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + (getNomeGita() == null ? 0 : this.getNomeGita().hashCode());
		result = 37 * result + (getDataEffettuazione() == null ? 0 : this.getDataEffettuazione().hashCode());
		result = 37 * result + (getCaricamentoDati() == null ? 0 : this.getCaricamentoDati().hashCode());
		return result;
	}

	public String toString() {
		return "GiteId [nomeGita=" + nomeGita + ", dataEffettuazione=" + dataEffettuazione + ", caricamentoDati=" + caricamentoDati	+ "]";
	}
	
}
